// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in = load, sel = address[9..11], a = c1, b = c2, c = c3, d = c4, e = c5, f = c6, g = c7, h = c8);
	RAM512(in = in, load = c1, address = address[0..8], out = R1);
	RAM512(in = in, load = c2, address = address[0..8], out = R2);
	RAM512(in = in, load = c3, address = address[0..8], out = R3);
	RAM512(in = in, load = c4, address = address[0..8], out = R4);
	RAM512(in = in, load = c5, address = address[0..8], out = R5);
	RAM512(in = in, load = c6, address = address[0..8], out = R6);
	RAM512(in = in, load = c7, address = address[0..8], out = R7);
	RAM512(in = in, load = c8, address = address[0..8], out = R8);

	Mux8Way16(a = R1, b = R2, c = R3, d = R4, e = R5, f = R6, g = R7, h = R8, sel = address[9..11], out = out);
}