// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux(in=load,sel=address[13],a=l01,b=l23);
    DMux(in=l01,sel=address[12],a=l0,b=l1);
    DMux(in=l23,sel=address[12],a=l2,b=l3);
    RAM4K(in=in,load=l0,address=address[0..11],out=out0);
    RAM4K(in=in,load=l1,address=address[0..11],out=out1);
    RAM4K(in=in,load=l2,address=address[0..11],out=out2);
    RAM4K(in=in,load=l3,address=address[0..11],out=out3);
    Mux16(a=out0,b=out1,sel=address[12],out=out01);
    Mux16(a=out2,b=out3,sel=address[12],out=out23);
    Mux16(a=out01,b=out23,sel=address[13],out=out);
}
