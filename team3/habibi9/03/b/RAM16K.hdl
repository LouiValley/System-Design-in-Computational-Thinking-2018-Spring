// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[11..13], a = ram0, b = ram1, c = ram2, d = ram3, e = ram4, f = ram5, g = ram6, h = ram7);

    RAM4K(in = in, load = ram0, address = address[0..11], out = muxOut0);
    RAM4K(in = in, load = ram1, address = address[0..11], out = muxOut1);
    RAM4K(in = in, load = ram2, address = address[0..11], out = muxOut2);
    RAM4K(in = in, load = ram3, address = address[0..11], out = muxOut3);
    RAM4K(in = in, load = ram4, address = address[0..11], out = muxOut4);
    RAM4K(in = in, load = ram5, address = address[0..11], out = muxOut5);
    RAM4K(in = in, load = ram6, address = address[0..11], out = muxOut6);
    RAM4K(in = in, load = ram7, address = address[0..11], out = muxOut7);

    Mux8Way16(a = muxOut0, b = muxOut1, c = muxOut2, d = muxOut3, e = muxOut4, f = muxOut5, g = muxOut6, h = muxOut7, sel = address[11..13], out = out);
}